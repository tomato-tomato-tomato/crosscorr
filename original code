
##ANGER##
# Set working directory to the directory containing the files
setwd("/data/netapp02/work/Manvi_Sethi/anger_csvs")

# Get the list of all files in the directory
anger_files <- list.files()
anger_pids <- unique(gsub(".*_(F[0-9]+).*", "\\1", anger_files))

epi_results <- lapply(anger_pids, function(i) {
  # Get the file names for the mother and child for the EPI and PSI events
  m_epi_file <- grep(paste0("anger_", i, "_m_epi.csv"), anger_files, value = TRUE)
  c_epi_file <- grep(paste0("anger_", i, "_c_epi.csv"), anger_files, value = TRUE)
  
  # Check if all EPI files exist for this participant ID
  if (length(m_epi_file) == 0 || length(c_epi_file) == 0) {
    # Add an "error" message to the results list and skip to the next participant ID
    return(list("file not found"))
  }
  
  # Load the data from each file
  m_epi_data <- read.csv(m_epi_file)
  c_epi_data <- read.csv(c_epi_file)
  
  # Calculate the cross-correlation function for the 'anger' column for each pair of files
  ccf_epi <- ccf(c_epi_data$anger, m_epi_data$anger, plot = FALSE)
  
  # Return the results from this iteration
  return(list(ccf_epi))
})

psi_results <- lapply(anger_pids, function(i) {
  # Get the file names for the mother and child for the PSI events
  m_psi_file <- grep(paste0("anger_", i, "_m_psi.csv"), anger_files, value = TRUE)
  c_psi_file <- grep(paste0("anger_", i, "_c_psi.csv"), anger_files, value = TRUE)
  
  # Check if all PSI files exist for this participant ID
  if (length(m_psi_file) == 0 || length(c_psi_file) == 0) {
    # Add an "error" message to the results list and skip to the next participant ID
    return(list("file not found"))
  }
  
  # Load the data from each file
  m_psi_data <- read.csv(m_psi_file)
  c_psi_data <- read.csv(c_psi_file)
  
  # Calculate the cross-correlation function for the 'anger' column for each pair of files
  ccf_psi <- ccf(c_psi_data$anger, m_psi_data$anger, plot = FALSE)
  
  # Return the results from this iteration
  return(list(ccf_psi))
})

##HAPPINESS##
# Set working directory to the directory containing the files
setwd("/data/netapp02/work/Manvi_Sethi/happiness_csvs")

# Get the list of all files in the directory
happiness_files <- list.files()
happiness_pids <- unique(gsub(".*_(F[0-9]+).*", "\\1", happiness_files))

epi_results <- lapply(happiness_pids, function(i) {
  # Get the file names for the mother and child for the EPI and PSI events
  m_epi_file <- grep(paste0("happiness_", i, "_m_epi.csv"), happiness_files, value = TRUE)
  c_epi_file <- grep(paste0("happiness_", i, "_c_epi.csv"), happiness_files, value = TRUE)
  
  # Check if all EPI files exist for this participant ID
  if (length(m_epi_file) == 0 || length(c_epi_file) == 0) {
    # Add an "error" message to the results list and skip to the next participant ID
    return(list("file not found"))
  }
  
  # Load the data from each file
  m_epi_data <- read.csv(m_epi_file)
  c_epi_data <- read.csv(c_epi_file)
  
  # Calculate the cross-correlation function for the 'happiness' column for each pair of files
  ccf_epi <- ccf(c_epi_data$happiness, m_epi_data$happiness, plot = FALSE)
  
  # Return the results from this iteration
  return(list(ccf_epi))
})

psi_results <- lapply(happiness_pids, function(i) {
  # Get the file names for the mother and child for the PSI events
  m_psi_file <- grep(paste0("happiness_", i, "_m_psi.csv"), happiness_files, value = TRUE)
  c_psi_file <- grep(paste0("happiness_", i, "_c_psi.csv"), happiness_files, value = TRUE)
  
  # Check if all PSI files exist for this participant ID
  if (length(m_psi_file) == 0 || length(c_psi_file) == 0) {
    # Add an "error" message to the results list and skip to the next participant ID
    return(list("file not found"))
  }
  
  # Load the data from each file
  m_psi_data <- read.csv(m_psi_file)
  c_psi_data <- read.csv(c_psi_file)
  
  # Calculate the cross-correlation function for the 'happiness' column for each pair of files
  ccf_psi <- ccf(c_psi_data$happiness, m_psi_data$happiness, plot = FALSE)
  
  # Return the results from this iteration
  return(list(ccf_psi))
})

##SADNESS##
# Set working directory to the directory containing the files
setwd("/data/netapp02/work/Manvi_Sethi/sadness_csvs")

# Get the list of all files in the directory
sadness_files <- list.files()
sadness_pids <- unique(gsub(".*_(F[0-9]+).*", "\\1", sadness_files))

epi_results <- lapply(sadness_pids, function(i) {
  # Get the file names for the mother and child for the EPI and PSI events
  m_epi_file <- grep(paste0("sadness_", i, "_m_epi.csv"), sadness_files, value = TRUE)
  c_epi_file <- grep(paste0("sadness_", i, "_c_epi.csv"), sadness_files, value = TRUE)
  
  # Check if all EPI files exist for this participant ID
  if (length(m_epi_file) == 0 || length(c_epi_file) == 0) {
    # Add an "error" message to the results list and skip to the next participant ID
    return(list("file not found"))
  }
  
  # Load the data from each file
  m_epi_data <- read.csv(m_epi_file)
  c_epi_data <- read.csv(c_epi_file)
  
  # Calculate the cross-correlation function for the 'sadness' column for each pair of files
  ccf_epi <- ccf(c_epi_data$sadness, m_epi_data$sadness, plot = FALSE)
  
  # Return the results from this iteration
  return(list(ccf_epi))
})

psi_results <- lapply(sadness_pids, function(i) {
  # Get the file names for the mother and child for the PSI events
  m_psi_file <- grep(paste0("sadness_", i, "_m_psi.csv"), sadness_files, value = TRUE)
  c_psi_file <- grep(paste0("sadness_", i, "_c_psi.csv"), sadness_files, value = TRUE)
  
  # Check if all PSI files exist for this participant ID
  if (length(m_psi_file) == 0 || length(c_psi_file) == 0) {
    # Add an "error" message to the results list and skip to the next participant ID
    return(list("file not found"))
  }
  
  # Load the data from each file
  m_psi_data <- read.csv(m_psi_file)
  c_psi_data <- read.csv(c_psi_file)
  
  # Calculate the cross-correlation function for the 'sadness' column for each pair of files
  ccf_psi <- ccf(c_psi_data$sadness, m_psi_data$sadness, plot = FALSE)
  
  # Return the results from this iteration
  return(list(ccf_psi))
})





